import tkinter as tk 

marco = tk.Tk()
marco.title("Multiplicacion de matrices")
marco.geometry("1500x800")
marco.configure(background='#f2f2d4')

def cerrar():
    marco.destroy()
                
def construirVentana():
    result_a1 = tk.StringVar()
    result_a2 = tk.StringVar()
    result_b1 = tk.StringVar()
    result_b2 = tk.StringVar()
    
    label_Bienvenido = tk.Label(marco, text='Bienvenido al modulo para multiplicar matrices, digite los valores de la matriz')
    label_Bienvenido.grid(row=0, column=0, columnspan=10, padx=10, pady=10)
    label_Bienvenido.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))                
    
    label_Pabrir1 = tk.Label(marco, text='[')
    label_Pabrir1.grid(row=1, column=1, rowspan=3, padx=10, pady=10)
    label_Pabrir1.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
    
    label_Pcerrar1 = tk.Label(marco, text=']')
    label_Pcerrar1.grid(row=1, column=4, rowspan=3, padx=10, pady=10)
    label_Pcerrar1.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
                             
    label_Multi = tk.Label(marco, text='X')
    label_Multi.grid(row=2, column=5, padx=10, pady=10)
    label_Multi.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
    
    label_Pabrir2 = tk.Label(marco, text='[')
    label_Pabrir2.grid(row=1, column=6, rowspan=3, padx=10, pady=10)
    label_Pabrir2.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
    
    label_Pcerrar2 = tk.Label(marco, text=']')
    label_Pcerrar2.grid(row=1, column=9, rowspan=3, padx=10, pady=10)
    label_Pcerrar2.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
                          
    label_Igual = tk.Label(marco, text='=')
    label_Igual.grid(row=2, column=10, padx=10, pady=10)
    label_Igual.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
    
    label_Pabrir3 = tk.Label(marco, text='[')
    label_Pabrir3.grid(row=1, column=11, rowspan=3, padx=10, pady=10)
    label_Pabrir3.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
    
    label_Pcerrar3 = tk.Label(marco, text=']')
    label_Pcerrar3.grid(row=1, column=14, rowspan=3, padx=10, pady=10)
    label_Pcerrar3.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
                          
    label_a1 = tk.Label(marco, textvariable = result_a1)
    label_a1.grid(row=1, column=12, padx=10, pady=10)
    label_a1.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
                        
    label_a2 = tk.Label(marco, textvariable = result_a2)
    label_a2.grid(row=1, column=13, padx=10, pady=10)
    label_a2.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
                        
    label_b1 = tk.Label(marco, textvariable = result_b1)
    label_b1.grid(row=1, column=12, padx=10, pady=10)
    label_b1.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
                    
    label_b2 = tk.Label(marco, textvariable = result_b2)
    label_b2.grid(row=1, column=12, padx=10, pady=10)
    label_b2.config(fg="blue", bg='#f2f2d4', font=("Verdana", 19))
     
    matriz1 = []    
    matriz2 = []
    for i in range(2):
        matriz1.append([])
        matriz2.append([])
        for j in range(2):
            matriz1.append(None)
            matriz2.append(None)
    
    for i in range(2):
        for j in range(2):
            print(matriz1[i][j])
    
    for k in range(2):
        for l in range(2):
            matriz1[k][l] = tk.Entry(marco) 
            matriz1[k][l].grid(row=i+2, column=j+2, padx=10, pady=10)
            matriz1[k][l].config(width=10)
            
            matriz2[k][l] = tk.Entry(marco) 
            matriz2[k][l].grid(row=i+2, column=j+7, padx=10, pady=10)
            matriz2[k][l].config(width=10)
                    
    b_operar = tk.Button(marco, text='Multiplicar')#, command= lambda : sacarCampos(campos))
    b_operar.grid(row=4, column=5, columnspan=3, pady=4)
    b_operar.config(font=("Consolas",12), pady=5)
    
    b_cerrar = tk.Button(marco, text='Cerrar', command=cerrar)
    b_cerrar.grid(row=5, column=10, columnspan=3, pady=4)
    b_cerrar.config(font=("Consolas",12), pady=5)                
    
    marco.mainloop()

construirVentana()
